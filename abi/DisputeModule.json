[
  {
    "type": "function",
    "name": "cancelDispute",
    "inputs": [
      {
        "name": "_disputeId",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "_data",
        "type": "bytes",
        "internalType": "bytes"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "disputeId",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "disputes",
    "inputs": [
      {
        "name": "disputeId",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "ipId",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "disputeInitiator",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "arbitrationPolicy",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "linkToDisputeSummary",
        "type": "bytes32",
        "internalType": "bytes32"
      },
      {
        "name": "tag",
        "type": "bytes32",
        "internalType": "bytes32"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "isWhitelistedArbitrationPolicy",
    "inputs": [
      {
        "name": "arbitrationPolicy",
        "type": "address",
        "internalType": "address"
      }
    ],
    "outputs": [
      {
        "name": "allowed",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "isWhitelistedArbitrationRelayer",
    "inputs": [
      {
        "name": "arbitrationPolicy",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "arbitrationRelayer",
        "type": "address",
        "internalType": "address"
      }
    ],
    "outputs": [
      {
        "name": "allowed",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "isWhitelistedDisputeTag",
    "inputs": [
      {
        "name": "tag",
        "type": "bytes32",
        "internalType": "bytes32"
      }
    ],
    "outputs": [
      {
        "name": "allowed",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "raiseDispute",
    "inputs": [
      {
        "name": "_ipId",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "_arbitrationPolicy",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "_linkToDisputeSummary",
        "type": "string",
        "internalType": "string"
      },
      {
        "name": "_targetTag",
        "type": "bytes32",
        "internalType": "bytes32"
      },
      {
        "name": "_data",
        "type": "bytes",
        "internalType": "bytes"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "resolveDispute",
    "inputs": [
      {
        "name": "_disputeId",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "setDisputeJudgement",
    "inputs": [
      {
        "name": "_disputeId",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "_decision",
        "type": "bool",
        "internalType": "bool"
      },
      {
        "name": "_data",
        "type": "bytes",
        "internalType": "bytes"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "whitelistArbitrationPolicy",
    "inputs": [
      {
        "name": "_arbitrationPolicy",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "_allowed",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "whitelistArbitrationRelayer",
    "inputs": [
      {
        "name": "_arbitrationPolicy",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "_arbPolicyRelayer",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "_allowed",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "whitelistDisputeTags",
    "inputs": [
      {
        "name": "_tag",
        "type": "bytes32",
        "internalType": "bytes32"
      },
      {
        "name": "_allowed",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "error",
    "name": "DisputeModule__NotDisputeInitiator",
    "inputs": []
  },
  {
    "type": "error",
    "name": "DisputeModule__NotWhitelistedArbitrationPolicy",
    "inputs": []
  },
  {
    "type": "error",
    "name": "DisputeModule__NotWhitelistedArbitrationRelayer",
    "inputs": []
  },
  {
    "type": "error",
    "name": "DisputeModule__NotWhitelistedDisputeTag",
    "inputs": []
  },
  {
    "type": "error",
    "name": "DisputeModule__ZeroArbitrationPolicy",
    "inputs": []
  },
  {
    "type": "error",
    "name": "DisputeModule__ZeroArbitrationRelayer",
    "inputs": []
  },
  {
    "type": "error",
    "name": "DisputeModule__ZeroDisputeTag",
    "inputs": []
  },
  {
    "type": "error",
    "name": "DisputeModule__ZeroLinkToDisputeSummary",
    "inputs": []
  },
  {
    "type": "error",
    "name": "ReentrancyGuardReentrantCall",
    "inputs": []
  },
  {
    "type": "error",
    "name": "StringTooLong",
    "inputs": [
      {
        "name": "str",
        "type": "string",
        "internalType": "string"
      }
    ]
  }
]
