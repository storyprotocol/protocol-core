[
  {
    "type": "constructor",
    "inputs": [
      {
        "name": "uri",
        "type": "string",
        "internalType": "string"
      }
    ],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "addLicenseFramework",
    "inputs": [
      {
        "name": "fwCreation",
        "type": "tuple",
        "internalType": "struct Licensing.FrameworkCreationParams",
        "components": [
          {
            "name": "mintingParamVerifiers",
            "type": "address[]",
            "internalType": "contract IParamVerifier[]"
          },
          {
            "name": "mintingParamDefaultValues",
            "type": "bytes[]",
            "internalType": "bytes[]"
          },
          {
            "name": "activationParamVerifiers",
            "type": "address[]",
            "internalType": "contract IParamVerifier[]"
          },
          {
            "name": "activationParamDefaultValues",
            "type": "bytes[]",
            "internalType": "bytes[]"
          },
          {
            "name": "defaultNeedsActivation",
            "type": "bool",
            "internalType": "bool"
          },
          {
            "name": "linkParentParamVerifiers",
            "type": "address[]",
            "internalType": "contract IParamVerifier[]"
          },
          {
            "name": "linkParentParamDefaultValues",
            "type": "bytes[]",
            "internalType": "bytes[]"
          },
          {
            "name": "licenseUrl",
            "type": "string",
            "internalType": "string"
          }
        ]
      }
    ],
    "outputs": [
      {
        "name": "frameworkId",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "addPolicy",
    "inputs": [
      {
        "name": "ipId",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "pol",
        "type": "tuple",
        "internalType": "struct Licensing.Policy",
        "components": [
          {
            "name": "frameworkId",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "mintingParamValues",
            "type": "bytes[]",
            "internalType": "bytes[]"
          },
          {
            "name": "activationParamValues",
            "type": "bytes[]",
            "internalType": "bytes[]"
          },
          {
            "name": "needsActivation",
            "type": "bool",
            "internalType": "bool"
          },
          {
            "name": "linkParentParamValues",
            "type": "bytes[]",
            "internalType": "bytes[]"
          }
        ]
      }
    ],
    "outputs": [
      {
        "name": "policyId",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "indexOnIpId",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "balanceOf",
    "inputs": [
      {
        "name": "account",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "id",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "balanceOfBatch",
    "inputs": [
      {
        "name": "accounts",
        "type": "address[]",
        "internalType": "address[]"
      },
      {
        "name": "ids",
        "type": "uint256[]",
        "internalType": "uint256[]"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "uint256[]",
        "internalType": "uint256[]"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "framework",
    "inputs": [
      {
        "name": "frameworkId",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "fw",
        "type": "tuple",
        "internalType": "struct Licensing.Framework",
        "components": [
          {
            "name": "mintingParams",
            "type": "tuple[]",
            "internalType": "struct Licensing.Parameter[]",
            "components": [
              {
                "name": "verifier",
                "type": "address",
                "internalType": "contract IParamVerifier"
              },
              {
                "name": "defaultValue",
                "type": "bytes",
                "internalType": "bytes"
              }
            ]
          },
          {
            "name": "activationParams",
            "type": "tuple[]",
            "internalType": "struct Licensing.Parameter[]",
            "components": [
              {
                "name": "verifier",
                "type": "address",
                "internalType": "contract IParamVerifier"
              },
              {
                "name": "defaultValue",
                "type": "bytes",
                "internalType": "bytes"
              }
            ]
          },
          {
            "name": "defaultNeedsActivation",
            "type": "bool",
            "internalType": "bool"
          },
          {
            "name": "linkParentParams",
            "type": "tuple[]",
            "internalType": "struct Licensing.Parameter[]",
            "components": [
              {
                "name": "verifier",
                "type": "address",
                "internalType": "contract IParamVerifier"
              },
              {
                "name": "defaultValue",
                "type": "bytes",
                "internalType": "bytes"
              }
            ]
          },
          {
            "name": "licenseUrl",
            "type": "string",
            "internalType": "string"
          }
        ]
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "isApprovedForAll",
    "inputs": [
      {
        "name": "account",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "operator",
        "type": "address",
        "internalType": "address"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "isLicensee",
    "inputs": [
      {
        "name": "licenseId",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "holder",
        "type": "address",
        "internalType": "address"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "isParent",
    "inputs": [
      {
        "name": "parentIpId",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "childIpId",
        "type": "address",
        "internalType": "address"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "isPolicyIdSetForIp",
    "inputs": [
      {
        "name": "ipId",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "policyId",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "mintLicense",
    "inputs": [
      {
        "name": "licenseData",
        "type": "tuple",
        "internalType": "struct Licensing.License",
        "components": [
          {
            "name": "policyId",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "licensorIpIds",
            "type": "address[]",
            "internalType": "address[]"
          }
        ]
      },
      {
        "name": "amount",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "receiver",
        "type": "address",
        "internalType": "address"
      }
    ],
    "outputs": [
      {
        "name": "licenseId",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "parentIpIds",
    "inputs": [
      {
        "name": "ipId",
        "type": "address",
        "internalType": "address"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "address[]",
        "internalType": "address[]"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "policy",
    "inputs": [
      {
        "name": "policyId",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "pol",
        "type": "tuple",
        "internalType": "struct Licensing.Policy",
        "components": [
          {
            "name": "frameworkId",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "mintingParamValues",
            "type": "bytes[]",
            "internalType": "bytes[]"
          },
          {
            "name": "activationParamValues",
            "type": "bytes[]",
            "internalType": "bytes[]"
          },
          {
            "name": "needsActivation",
            "type": "bool",
            "internalType": "bool"
          },
          {
            "name": "linkParentParamValues",
            "type": "bytes[]",
            "internalType": "bytes[]"
          }
        ]
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "policyForIpAtIndex",
    "inputs": [
      {
        "name": "ipId",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "index",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "tuple",
        "internalType": "struct Licensing.Policy",
        "components": [
          {
            "name": "frameworkId",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "mintingParamValues",
            "type": "bytes[]",
            "internalType": "bytes[]"
          },
          {
            "name": "activationParamValues",
            "type": "bytes[]",
            "internalType": "bytes[]"
          },
          {
            "name": "needsActivation",
            "type": "bool",
            "internalType": "bool"
          },
          {
            "name": "linkParentParamValues",
            "type": "bytes[]",
            "internalType": "bytes[]"
          }
        ]
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "policyIdForIpAtIndex",
    "inputs": [
      {
        "name": "ipId",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "index",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "policyId",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "policyIdsForIp",
    "inputs": [
      {
        "name": "ipId",
        "type": "address",
        "internalType": "address"
      }
    ],
    "outputs": [
      {
        "name": "policyIds",
        "type": "uint256[]",
        "internalType": "uint256[]"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "safeBatchTransferFrom",
    "inputs": [
      {
        "name": "from",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "to",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "ids",
        "type": "uint256[]",
        "internalType": "uint256[]"
      },
      {
        "name": "values",
        "type": "uint256[]",
        "internalType": "uint256[]"
      },
      {
        "name": "data",
        "type": "bytes",
        "internalType": "bytes"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "safeTransferFrom",
    "inputs": [
      {
        "name": "from",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "to",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "id",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "value",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "data",
        "type": "bytes",
        "internalType": "bytes"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "setApprovalForAll",
    "inputs": [
      {
        "name": "operator",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "approved",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "setParentPolicy",
    "inputs": [
      {
        "name": "licenseId",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "childIpId",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "holder",
        "type": "address",
        "internalType": "address"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "supportsInterface",
    "inputs": [
      {
        "name": "interfaceId",
        "type": "bytes4",
        "internalType": "bytes4"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "totalFrameworks",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "totalParentsForIpId",
    "inputs": [
      {
        "name": "ipId",
        "type": "address",
        "internalType": "address"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "totalPolicies",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "totalPoliciesForIp",
    "inputs": [
      {
        "name": "ipId",
        "type": "address",
        "internalType": "address"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "uri",
    "inputs": [
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "string",
        "internalType": "string"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "event",
    "name": "ApprovalForAll",
    "inputs": [
      {
        "name": "account",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "operator",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "approved",
        "type": "bool",
        "indexed": false,
        "internalType": "bool"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "TransferBatch",
    "inputs": [
      {
        "name": "operator",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "from",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "to",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "ids",
        "type": "uint256[]",
        "indexed": false,
        "internalType": "uint256[]"
      },
      {
        "name": "values",
        "type": "uint256[]",
        "indexed": false,
        "internalType": "uint256[]"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "TransferSingle",
    "inputs": [
      {
        "name": "operator",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "from",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "to",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "id",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "value",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "URI",
    "inputs": [
      {
        "name": "value",
        "type": "string",
        "indexed": false,
        "internalType": "string"
      },
      {
        "name": "id",
        "type": "uint256",
        "indexed": true,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "type": "error",
    "name": "ERC1155InsufficientBalance",
    "inputs": [
      {
        "name": "sender",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "balance",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "needed",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "tokenId",
        "type": "uint256",
        "internalType": "uint256"
      }
    ]
  },
  {
    "type": "error",
    "name": "ERC1155InvalidApprover",
    "inputs": [
      {
        "name": "approver",
        "type": "address",
        "internalType": "address"
      }
    ]
  },
  {
    "type": "error",
    "name": "ERC1155InvalidArrayLength",
    "inputs": [
      {
        "name": "idsLength",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "valuesLength",
        "type": "uint256",
        "internalType": "uint256"
      }
    ]
  },
  {
    "type": "error",
    "name": "ERC1155InvalidOperator",
    "inputs": [
      {
        "name": "operator",
        "type": "address",
        "internalType": "address"
      }
    ]
  },
  {
    "type": "error",
    "name": "ERC1155InvalidReceiver",
    "inputs": [
      {
        "name": "receiver",
        "type": "address",
        "internalType": "address"
      }
    ]
  },
  {
    "type": "error",
    "name": "ERC1155InvalidSender",
    "inputs": [
      {
        "name": "sender",
        "type": "address",
        "internalType": "address"
      }
    ]
  },
  {
    "type": "error",
    "name": "ERC1155MissingApprovalForAll",
    "inputs": [
      {
        "name": "operator",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "owner",
        "type": "address",
        "internalType": "address"
      }
    ]
  },
  {
    "type": "error",
    "name": "LicenseRegistry__EmptyLicenseUrl",
    "inputs": []
  },
  {
    "type": "error",
    "name": "LicenseRegistry__FrameworkNotFound",
    "inputs": []
  },
  {
    "type": "error",
    "name": "LicenseRegistry__InvalidParamVerifierType",
    "inputs": []
  },
  {
    "type": "error",
    "name": "LicenseRegistry__LicensorDoesntHaveThisPolicy",
    "inputs": []
  },
  {
    "type": "error",
    "name": "LicenseRegistry__LinkParentParamFailed",
    "inputs": []
  },
  {
    "type": "error",
    "name": "LicenseRegistry__MintParamFailed",
    "inputs": []
  },
  {
    "type": "error",
    "name": "LicenseRegistry__NotLicensee",
    "inputs": []
  },
  {
    "type": "error",
    "name": "LicenseRegistry__ParamVerifierLengthMismatch",
    "inputs": []
  },
  {
    "type": "error",
    "name": "LicenseRegistry__ParentIdEqualThanChild",
    "inputs": []
  },
  {
    "type": "error",
    "name": "LicenseRegistry__PolicyAlreadySetForIpId",
    "inputs": []
  },
  {
    "type": "error",
    "name": "LicenseRegistry__PolicyNotFound",
    "inputs": []
  }
]
