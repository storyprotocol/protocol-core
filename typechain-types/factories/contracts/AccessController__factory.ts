/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  AccessController,
  AccessControllerInterface,
} from "../../contracts/AccessController";

const _abi = [
  {
    inputs: [],
    name: "AccessController__CallerIsNotIPAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "AccessController__IPAccountIsNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "AccessController__IPAccountIsZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "AccessController__PermissionIsNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "AccessController__SignerIsZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "IP_ACCOUNT_REGISTRY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MODULE_REGISTRY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ipAccount_",
        type: "address",
      },
      {
        internalType: "address",
        name: "signer_",
        type: "address",
      },
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "func_",
        type: "bytes4",
      },
    ],
    name: "checkPermission",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ipAccount_",
        type: "address",
      },
      {
        internalType: "address",
        name: "signer_",
        type: "address",
      },
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "func_",
        type: "bytes4",
      },
    ],
    name: "getPermission",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ipAccountRegistry_",
        type: "address",
      },
      {
        internalType: "address",
        name: "moduleRegistry_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    name: "permissions",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer_",
        type: "address",
      },
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "func_",
        type: "bytes4",
      },
      {
        internalType: "uint8",
        name: "permission_",
        type: "uint8",
      },
    ],
    name: "setGlobalPermission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ipAccount_",
        type: "address",
      },
      {
        internalType: "address",
        name: "signer_",
        type: "address",
      },
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "func_",
        type: "bytes4",
      },
      {
        internalType: "uint8",
        name: "permission_",
        type: "uint8",
      },
    ],
    name: "setPermission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506116fd806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80637dfd0ddb1161005b5780637dfd0ddb146101135780639a17eeae146101435780639f1ac51d14610173578063b95ddb521461018f57610088565b8063485cc9551461008d5780636597c2e5146100a9578063702acd85146100d95780637bac65fd146100f7575b600080fd5b6100a760048036038101906100a291906112f1565b6101ad565b005b6100c360048036038101906100be9190611389565b610232565b6040516100d0919061140c565b60405180910390f35b6100e1610354565b6040516100ee9190611436565b60405180910390f35b610111600480360381019061010c919061147d565b610378565b005b61012d60048036038101906101289190611389565b6106f7565b60405161013a9190611513565b60405180910390f35b61015d60048036038101906101589190611389565b611054565b60405161016a919061140c565b60405180910390f35b61018d6004803603810190610188919061152e565b61109d565b005b610197611268565b6040516101a49190611436565b60405180910390f35b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050949350505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036103de576040517f477f0f5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610444576040517f238498ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673__$43e15f62904d6211d92a685b5cadc6dd34$__635a1c2dd79091876040518363ffffffff1660e01b81526004016104b5929190611603565b602060405180830381865af41580156104d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f69190611658565b61052c576040517f930d1d0a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610591576040517f7e3a94bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028160ff1611156105cf576040517f07e5a97100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff021916908360ff1602179055505050505050565b60003073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156107ce5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c3c5a547846040518263ffffffff1660e01b815260040161078b9190611436565b602060405180830381865afa1580156107a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cc9190611658565b155b156107dc576000905061104c565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673__$43e15f62904d6211d92a685b5cadc6dd34$__635a1c2dd79091876040518363ffffffff1660e01b815260040161084d929190611603565b602060405180830381865af415801561086a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088e9190611658565b61089b576000905061104c565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610921919061169a565b73ffffffffffffffffffffffffffffffffffffffff1603610945576001905061104c565b600160ff16600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff1660ff1603610a71576001905061104c565b600060ff16600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff1660ff160361104757600160ff16600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008060e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff1660ff1603610cc3576001905061104c565b600060ff16600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008060e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff1660ff160361103e57600160ff16600260008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff1660ff1603610f15576001905061104c565b600160ff16600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008060e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff1660ff1614905061104c565b6000905061104c565b600090505b949350505050565b600260205283600052604060002060205282600052604060002060205281600052604060002060205280600052604060002060009350935050509054906101000a900460ff1681565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611103576040517f238498ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028160ff161115611141576040517f07e5a97100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600260008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff021916908360ff16021790555050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112be82611293565b9050919050565b6112ce816112b3565b81146112d957600080fd5b50565b6000813590506112eb816112c5565b92915050565b600080604083850312156113085761130761128e565b5b6000611316858286016112dc565b9250506020611327858286016112dc565b9150509250929050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61136681611331565b811461137157600080fd5b50565b6000813590506113838161135d565b92915050565b600080600080608085870312156113a3576113a261128e565b5b60006113b1878288016112dc565b94505060206113c2878288016112dc565b93505060406113d3878288016112dc565b92505060606113e487828801611374565b91505092959194509250565b600060ff82169050919050565b611406816113f0565b82525050565b600060208201905061142160008301846113fd565b92915050565b611430816112b3565b82525050565b600060208201905061144b6000830184611427565b92915050565b61145a816113f0565b811461146557600080fd5b50565b60008135905061147781611451565b92915050565b600080600080600060a086880312156114995761149861128e565b5b60006114a7888289016112dc565b95505060206114b8888289016112dc565b94505060406114c9888289016112dc565b93505060606114da88828901611374565b92505060806114eb88828901611468565b9150509295509295909350565b60008115159050919050565b61150d816114f8565b82525050565b60006020820190506115286000830184611504565b92915050565b600080600080608085870312156115485761154761128e565b5b6000611556878288016112dc565b9450506020611567878288016112dc565b935050604061157887828801611374565b925050606061158987828801611468565b91505092959194509250565b6000819050919050565b60006115ba6115b56115b084611293565b611595565b611293565b9050919050565b60006115cc8261159f565b9050919050565b60006115de826115c1565b9050919050565b6115ee816115d3565b82525050565b6115fd816112b3565b82525050565b600060408201905061161860008301856115e5565b61162560208301846115f4565b9392505050565b611635816114f8565b811461164057600080fd5b50565b6000815190506116528161162c565b92915050565b60006020828403121561166e5761166d61128e565b5b600061167c84828501611643565b91505092915050565b600081519050611694816112c5565b92915050565b6000602082840312156116b0576116af61128e565b5b60006116be84828501611685565b9150509291505056fea264697066735822122082ed713db4bfb3225f7b91a6a7f51b665e29ac434243895955a78e8fb064900c64736f6c63430008170033";

type AccessControllerConstructorParams =
  | [linkLibraryAddresses: AccessControllerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccessControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class AccessController__factory extends ContractFactory {
  constructor(...args: AccessControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        AccessController__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: AccessControllerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$43e15f62904d6211d92a685b5cadc6dd34\\$__", "g"),
      linkLibraryAddresses[
        "contracts/lib/registries/IPAccountChecker.sol:IPAccountChecker"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AccessController & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AccessController__factory {
    return super.connect(runner) as AccessController__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccessControllerInterface {
    return new Interface(_abi) as AccessControllerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AccessController {
    return new Contract(address, _abi, runner) as unknown as AccessController;
  }
}

export interface AccessControllerLibraryAddresses {
  ["contracts/lib/registries/IPAccountChecker.sol:IPAccountChecker"]: string;
}
