/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  DisputeModule,
  DisputeModuleInterface,
} from "../../../../contracts/modules/dispute-module/DisputeModule";

const _abi = [
  {
    inputs: [],
    name: "DisputeModule__NotDisputeInitiator",
    type: "error",
  },
  {
    inputs: [],
    name: "DisputeModule__NotWhitelistedArbitrationPolicy",
    type: "error",
  },
  {
    inputs: [],
    name: "DisputeModule__NotWhitelistedArbitrationRelayer",
    type: "error",
  },
  {
    inputs: [],
    name: "DisputeModule__NotWhitelistedDisputeTag",
    type: "error",
  },
  {
    inputs: [],
    name: "DisputeModule__ZeroArbitrationPolicy",
    type: "error",
  },
  {
    inputs: [],
    name: "DisputeModule__ZeroArbitrationRelayer",
    type: "error",
  },
  {
    inputs: [],
    name: "DisputeModule__ZeroDisputeTag",
    type: "error",
  },
  {
    inputs: [],
    name: "DisputeModule__ZeroLinkToDisputeSummary",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_disputeId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "cancelDispute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "disputeId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "disputeId",
        type: "uint256",
      },
    ],
    name: "disputes",
    outputs: [
      {
        internalType: "address",
        name: "ipId",
        type: "address",
      },
      {
        internalType: "address",
        name: "disputeInitiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "arbitrationPolicy",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "linkToDisputeSummary",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "tag",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "arbitrationPolicy",
        type: "address",
      },
    ],
    name: "isWhitelistedArbitrationPolicy",
    outputs: [
      {
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "arbitrationPolicy",
        type: "address",
      },
      {
        internalType: "address",
        name: "arbitrationRelayer",
        type: "address",
      },
    ],
    name: "isWhitelistedArbitrationRelayer",
    outputs: [
      {
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tag",
        type: "bytes32",
      },
    ],
    name: "isWhitelistedDisputeTag",
    outputs: [
      {
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ipId",
        type: "address",
      },
      {
        internalType: "address",
        name: "_arbitrationPolicy",
        type: "address",
      },
      {
        internalType: "string",
        name: "_linkToDisputeSummary",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "_targetTag",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "raiseDispute",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_disputeId",
        type: "uint256",
      },
    ],
    name: "resolveDispute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_disputeId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_decision",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "setDisputeJudgement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_arbitrationPolicy",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_allowed",
        type: "bool",
      },
    ],
    name: "whitelistArbitrationPolicy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_arbitrationPolicy",
        type: "address",
      },
      {
        internalType: "address",
        name: "_arbPolicyRelayer",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_allowed",
        type: "bool",
      },
    ],
    name: "whitelistArbitrationRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_tag",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "_allowed",
        type: "bool",
      },
    ],
    name: "whitelistDisputeTags",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600160008190555061170e806100286000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063bdcae24e11610071578063bdcae24e146101a3578063c2b7b868146101bf578063c844825d146101db578063cbf1ac7b146101f7578063dab83d2914610213578063ee414b1814610243576100b4565b80632e77c8d2146100b95780634da0412d146100d7578063564a565d146100f3578063684b69e31461012757806369d31e0a14610157578063b33b745714610187575b600080fd5b6100c1610273565b6040516100ce9190610da0565b60405180910390f35b6100f160048036038101906100ec9190610e65565b610279565b005b61010d60048036038101906101089190610ee4565b6103de565b60405161011e959493929190610f39565b60405180910390f35b610141600480360381019061013c9190610f8c565b610474565b60405161014e9190610fc8565b60405180910390f35b610171600480360381019061016c9190610fe3565b610494565b60405161017e9190610fc8565b60405180910390f35b6101a1600480360381019061019c9190611023565b6104c3565b005b6101bd60048036038101906101b891906110c8565b610584565b005b6101d960048036038101906101d49190610ee4565b610707565b005b6101f560048036038101906101f0919061113c565b6107a5565b005b610211600480360381019061020c91906111c8565b6108fc565b005b61022d60048036038101906102289190611208565b610967565b60405161023a9190610fc8565b60405180910390f35b61025d60048036038101906102589190611376565b610987565b60405161026a9190610da0565b60405180910390f35b60015481565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036102df576040517fde9bb34100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610345576040517f2be8a15d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b60026020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040154905085565b60046020528060005260406000206000915054906101000a900460ff1681565b60056020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610529576040517fde9bb34100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b61058c610cbd565b60006002600086815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610687576040517fca97282700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16636152325c868686866040518563ffffffff1660e01b81526004016106c6949392919061146a565b600060405180830381600087803b1580156106e057600080fd5b505af11580156106f4573d6000803e3d6000fd5b5050505050610701610d03565b50505050565b6002600082815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107a2576040517fb9e311aa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6107ad610cbd565b6002600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610848576040517fb9e311aa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600084815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f52a5233338585856040518563ffffffff1660e01b81526004016108bd94939291906114aa565b600060405180830381600087803b1580156108d757600080fd5b505af11580156108eb573d6000803e3d6000fd5b505050506108f7610d03565b505050565b6000801b8203610938576040517ff0733b8300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806003600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60036020528060005260406000206000915054906101000a900460ff1681565b6000610991610cbd565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610a14576040517f15d0d81b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003600085815260200190815260200160002060009054906101000a900460ff16610a6b576040517f47d1d67600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610a7686610d0d565b90506000801b8103610ab4576040517f653d1aea00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016000815480929190610ac790611519565b91905055506040518060a001604052808973ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018281526020018681525060026000600154815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030155608082015181600401559050508673ffffffffffffffffffffffffffffffffffffffff1663f60be8543386866040518463ffffffff1660e01b8152600401610c7393929190611561565b600060405180830381600087803b158015610c8d57600080fd5b505af1158015610ca1573d6000803e3d6000fd5b50505050600154915050610cb3610d03565b9695505050505050565b600260005403610cf9576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b6001600081905550565b6000610d1882610d1f565b9050919050565b600080829050601f81511115610d6c57826040517f305a27a9000000000000000000000000000000000000000000000000000000008152600401610d639190611612565b60405180910390fd5b805181610d7890611671565b60001c1760001b915050919050565b6000819050919050565b610d9a81610d87565b82525050565b6000602082019050610db56000830184610d91565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610dfa82610dcf565b9050919050565b610e0a81610def565b8114610e1557600080fd5b50565b600081359050610e2781610e01565b92915050565b60008115159050919050565b610e4281610e2d565b8114610e4d57600080fd5b50565b600081359050610e5f81610e39565b92915050565b600080600060608486031215610e7e57610e7d610dc5565b5b6000610e8c86828701610e18565b9350506020610e9d86828701610e18565b9250506040610eae86828701610e50565b9150509250925092565b610ec181610d87565b8114610ecc57600080fd5b50565b600081359050610ede81610eb8565b92915050565b600060208284031215610efa57610ef9610dc5565b5b6000610f0884828501610ecf565b91505092915050565b610f1a81610def565b82525050565b6000819050919050565b610f3381610f20565b82525050565b600060a082019050610f4e6000830188610f11565b610f5b6020830187610f11565b610f686040830186610f11565b610f756060830185610f2a565b610f826080830184610f2a565b9695505050505050565b600060208284031215610fa257610fa1610dc5565b5b6000610fb084828501610e18565b91505092915050565b610fc281610e2d565b82525050565b6000602082019050610fdd6000830184610fb9565b92915050565b60008060408385031215610ffa57610ff9610dc5565b5b600061100885828601610e18565b925050602061101985828601610e18565b9150509250929050565b6000806040838503121561103a57611039610dc5565b5b600061104885828601610e18565b925050602061105985828601610e50565b9150509250929050565b600080fd5b600080fd5b600080fd5b60008083601f84011261108857611087611063565b5b8235905067ffffffffffffffff8111156110a5576110a4611068565b5b6020830191508360018202830111156110c1576110c061106d565b5b9250929050565b600080600080606085870312156110e2576110e1610dc5565b5b60006110f087828801610ecf565b945050602061110187828801610e50565b935050604085013567ffffffffffffffff81111561112257611121610dca565b5b61112e87828801611072565b925092505092959194509250565b60008060006040848603121561115557611154610dc5565b5b600061116386828701610ecf565b935050602084013567ffffffffffffffff81111561118457611183610dca565b5b61119086828701611072565b92509250509250925092565b6111a581610f20565b81146111b057600080fd5b50565b6000813590506111c28161119c565b92915050565b600080604083850312156111df576111de610dc5565b5b60006111ed858286016111b3565b92505060206111fe85828601610e50565b9150509250929050565b60006020828403121561121e5761121d610dc5565b5b600061122c848285016111b3565b91505092915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6112838261123a565b810181811067ffffffffffffffff821117156112a2576112a161124b565b5b80604052505050565b60006112b5610dbb565b90506112c1828261127a565b919050565b600067ffffffffffffffff8211156112e1576112e061124b565b5b6112ea8261123a565b9050602081019050919050565b82818337600083830152505050565b6000611319611314846112c6565b6112ab565b90508281526020810184848401111561133557611334611235565b5b6113408482856112f7565b509392505050565b600082601f83011261135d5761135c611063565b5b813561136d848260208601611306565b91505092915050565b60008060008060008060a0878903121561139357611392610dc5565b5b60006113a189828a01610e18565b96505060206113b289828a01610e18565b955050604087013567ffffffffffffffff8111156113d3576113d2610dca565b5b6113df89828a01611348565b94505060606113f089828a016111b3565b935050608087013567ffffffffffffffff81111561141157611410610dca565b5b61141d89828a01611072565b92509250509295509295509295565b600082825260208201905092915050565b6000611449838561142c565b93506114568385846112f7565b61145f8361123a565b840190509392505050565b600060608201905061147f6000830187610d91565b61148c6020830186610fb9565b818103604083015261149f81848661143d565b905095945050505050565b60006060820190506114bf6000830187610f11565b6114cc6020830186610d91565b81810360408301526114df81848661143d565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061152482610d87565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611556576115556114ea565b5b600182019050919050565b60006040820190506115766000830186610f11565b818103602083015261158981848661143d565b9050949350505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156115cd5780820151818401526020810190506115b2565b60008484015250505050565b60006115e482611593565b6115ee818561159e565b93506115fe8185602086016115af565b6116078161123a565b840191505092915050565b6000602082019050818103600083015261162c81846115d9565b905092915050565b600081519050919050565b6000819050602082019050919050565b600061165b8251610f20565b80915050919050565b600082821b905092915050565b600061167c82611634565b826116868461163f565b90506116918161164f565b925060208210156116d1576116cc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83602003600802611664565b831692505b505091905056fea2646970667358221220883f231b5f05a1fbcd2955f942e91fed522487ae3fe9125fce1976961aacd43e64736f6c63430008170033";

type DisputeModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DisputeModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DisputeModule__factory extends ContractFactory {
  constructor(...args: DisputeModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DisputeModule & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DisputeModule__factory {
    return super.connect(runner) as DisputeModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DisputeModuleInterface {
    return new Interface(_abi) as DisputeModuleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DisputeModule {
    return new Contract(address, _abi, runner) as unknown as DisputeModule;
  }
}
