/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  RoyaltyModule,
  RoyaltyModuleInterface,
} from "../../../../contracts/modules/royalty-module/RoyaltyModule";

const _abi = [
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "RoyaltyModule__AlreadySetRoyaltyPolicy",
    type: "error",
  },
  {
    inputs: [],
    name: "RoyaltyModule__NotWhitelistedRoyaltyPolicy",
    type: "error",
  },
  {
    inputs: [],
    name: "RoyaltyModule__ZeroRoyaltyPolicy",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "royaltyPolicy",
        type: "address",
      },
    ],
    name: "isWhitelistedRoyaltyPolicy",
    outputs: [
      {
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ipId",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "payRoyalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ipId",
        type: "address",
      },
    ],
    name: "royaltyPolicies",
    outputs: [
      {
        internalType: "address",
        name: "royaltyPolicy",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ipId",
        type: "address",
      },
      {
        internalType: "address",
        name: "_royaltyPolicy",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "setRoyaltyPolicy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_royaltyPolicy",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_allowed",
        type: "bool",
      },
    ],
    name: "whitelistRoyaltyPolicy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506001600081905550610981806100286000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632930af8b1461005c57806349fb46151461008c578063861b98aa146100a857806396467814146100c4578063cf18844d146100f4575b600080fd5b6100766004803603810190610071919061060c565b610110565b6040516100839190610648565b60405180910390f35b6100a660048036038101906100a1919061069b565b610143565b005b6100c260048036038101906100bd9190610711565b610204565b005b6100de60048036038101906100d9919061060c565b6102e9565b6040516100eb9190610773565b60405180910390f35b61010e600480360381019061010991906107f3565b610309565b005b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036101a9576040517fb3c4f5c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b61020c610554565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635be8968b338585856040518563ffffffff1660e01b81526004016102aa9493929190610876565b600060405180830381600087803b1580156102c457600080fd5b505af11580156102d8573d6000803e3d6000fd5b505050506102e461059a565b505050565b60016020528060005260406000206000915054906101000a900460ff1681565b610311610554565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610394576040517f06b627fa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610459576040517f16f86d6f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff16631db874c48584846040518463ffffffff1660e01b815260040161051493929190610919565b600060405180830381600087803b15801561052e57600080fd5b505af1158015610542573d6000803e3d6000fd5b5050505061054e61059a565b50505050565b600260005403610590576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b6001600081905550565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105d9826105ae565b9050919050565b6105e9816105ce565b81146105f457600080fd5b50565b600081359050610606816105e0565b92915050565b600060208284031215610622576106216105a4565b5b6000610630848285016105f7565b91505092915050565b610642816105ce565b82525050565b600060208201905061065d6000830184610639565b92915050565b60008115159050919050565b61067881610663565b811461068357600080fd5b50565b6000813590506106958161066f565b92915050565b600080604083850312156106b2576106b16105a4565b5b60006106c0858286016105f7565b92505060206106d185828601610686565b9150509250929050565b6000819050919050565b6106ee816106db565b81146106f957600080fd5b50565b60008135905061070b816106e5565b92915050565b60008060006060848603121561072a576107296105a4565b5b6000610738868287016105f7565b9350506020610749868287016105f7565b925050604061075a868287016106fc565b9150509250925092565b61076d81610663565b82525050565b60006020820190506107886000830184610764565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126107b3576107b261078e565b5b8235905067ffffffffffffffff8111156107d0576107cf610793565b5b6020830191508360018202830111156107ec576107eb610798565b5b9250929050565b6000806000806060858703121561080d5761080c6105a4565b5b600061081b878288016105f7565b945050602061082c878288016105f7565b935050604085013567ffffffffffffffff81111561084d5761084c6105a9565b5b6108598782880161079d565b925092505092959194509250565b610870816106db565b82525050565b600060808201905061088b6000830187610639565b6108986020830186610639565b6108a56040830185610639565b6108b26060830184610867565b95945050505050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b60006108f883856108bb565b93506109058385846108cc565b61090e836108db565b840190509392505050565b600060408201905061092e6000830186610639565b81810360208301526109418184866108ec565b905094935050505056fea26469706673582212207519e5e7ccacdda733a309403db1924dea1d5e99ceda30a0d5fb241858aaa75564736f6c63430008170033";

type RoyaltyModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RoyaltyModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RoyaltyModule__factory extends ContractFactory {
  constructor(...args: RoyaltyModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      RoyaltyModule & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RoyaltyModule__factory {
    return super.connect(runner) as RoyaltyModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoyaltyModuleInterface {
    return new Interface(_abi) as RoyaltyModuleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RoyaltyModule {
    return new Contract(address, _abi, runner) as unknown as RoyaltyModule;
  }
}
