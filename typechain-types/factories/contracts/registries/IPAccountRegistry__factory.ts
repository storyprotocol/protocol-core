/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  IPAccountRegistry,
  IPAccountRegistryInterface,
} from "../../../contracts/registries/IPAccountRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "erc6551Registry_",
        type: "address",
      },
      {
        internalType: "address",
        name: "accessController_",
        type: "address",
      },
      {
        internalType: "address",
        name: "ipAccountImpl_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NonExistIpAccountImpl",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "IPAccountRegistered",
    type: "event",
  },
  {
    inputs: [],
    name: "ACCESS_CONTROLLER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ERC6551_PUBLIC_REGISTRY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "IP_ACCOUNT_IMPL",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "IP_ACCOUNT_SALT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getIPAccountImpl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenContract_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "ipAccount",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenContract_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "registerIpAccount",
    outputs: [
      {
        internalType: "address",
        name: "ipAccountAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61010060405234801561001157600080fd5b50604051610b25380380610b25833981810160405281019061003391906101ab565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610099576040517fffba616000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250506000801b60a081815250508273ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1660e08173ffffffffffffffffffffffffffffffffffffffff16815250505050506101fe565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101788261014d565b9050919050565b6101888161016d565b811461019357600080fd5b50565b6000815190506101a58161017f565b92915050565b6000806000606084860312156101c4576101c3610148565b5b60006101d286828701610196565b93505060206101e386828701610196565b92505060406101f486828701610196565b9150509250925092565b60805160a05160c05160e0516108af610276600039600081816101c2015261024b01526000818161017a015281816102fb01526104f101526000818161019e01528181610358015261054e0152600081816101e601528181610222015281816103370152818161045e015261052d01526108af6000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80635796ffbc1161005b5780635796ffbc146100dc57806387020f95146100fa57806395a3dfb21461012a578063db4fdb31146101485761007d565b80630c3c7264146100825780631a8bb07b146100a05780631b8b1073146100be575b600080fd5b61008a610178565b604051610097919061061b565b60405180910390f35b6100a861019c565b6040516100b5919061064f565b60405180910390f35b6100c66101c0565b6040516100d3919061061b565b60405180910390f35b6100e46101e4565b6040516100f1919061061b565b60405180910390f35b610114600480360381019061010f91906106d1565b610208565b604051610121919061061b565b60405180910390f35b61013261021e565b60405161013f919061061b565b60405180910390f35b610162600480360381019061015d91906106d1565b610246565b60405161016f919061061b565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006102158484846104ed565b90509392505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000807f000000000000000000000000000000000000000000000000000000000000000060405160240161027a919061061b565b6040516020818303038152906040527fc4d66de8000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16638a54c52f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000008888886040518663ffffffff1660e01b815260040161039a959493929190610733565b6020604051808303816000875af11580156103b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103dd919061079b565b91506000808373ffffffffffffffffffffffffffffffffffffffff16836040516104079190610839565b6000604051808303816000865af19150503d8060008114610444576040519150601f19603f3d011682016040523d82523d6000602084013e610449565b606091505b50915091508161045b57805160208201fd5b867f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f5be70b68c8361762980ec7d425d79fd33f6d49cac8a498e6ddf514f995b987f789896040516104db929190610850565b60405180910390a45050509392505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663246a00217f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000008787876040518663ffffffff1660e01b8152600401610590959493929190610733565b602060405180830381865afa1580156105ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d1919061079b565b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610605826105da565b9050919050565b610615816105fa565b82525050565b6000602082019050610630600083018461060c565b92915050565b6000819050919050565b61064981610636565b82525050565b60006020820190506106646000830184610640565b92915050565b600080fd5b6000819050919050565b6106828161066f565b811461068d57600080fd5b50565b60008135905061069f81610679565b92915050565b6106ae816105fa565b81146106b957600080fd5b50565b6000813590506106cb816106a5565b92915050565b6000806000606084860312156106ea576106e961066a565b5b60006106f886828701610690565b9350506020610709868287016106bc565b925050604061071a86828701610690565b9150509250925092565b61072d8161066f565b82525050565b600060a082019050610748600083018861060c565b6107556020830187610640565b6107626040830186610724565b61076f606083018561060c565b61077c6080830184610724565b9695505050505050565b600081519050610795816106a5565b92915050565b6000602082840312156107b1576107b061066a565b5b60006107bf84828501610786565b91505092915050565b600081519050919050565b600081905092915050565b60005b838110156107fc5780820151818401526020810190506107e1565b60008484015250505050565b6000610813826107c8565b61081d81856107d3565b935061082d8185602086016107de565b80840191505092915050565b60006108458284610808565b915081905092915050565b6000604082019050610865600083018561060c565b6108726020830184610724565b939250505056fea264697066735822122013645475dafaf513392d291840b38fe046c65a2015097be39be66564605a8c9964736f6c63430008170033";

type IPAccountRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IPAccountRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IPAccountRegistry__factory extends ContractFactory {
  constructor(...args: IPAccountRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    erc6551Registry_: AddressLike,
    accessController_: AddressLike,
    ipAccountImpl_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      erc6551Registry_,
      accessController_,
      ipAccountImpl_,
      overrides || {}
    );
  }
  override deploy(
    erc6551Registry_: AddressLike,
    accessController_: AddressLike,
    ipAccountImpl_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      erc6551Registry_,
      accessController_,
      ipAccountImpl_,
      overrides || {}
    ) as Promise<
      IPAccountRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): IPAccountRegistry__factory {
    return super.connect(runner) as IPAccountRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IPAccountRegistryInterface {
    return new Interface(_abi) as IPAccountRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IPAccountRegistry {
    return new Contract(address, _abi, runner) as unknown as IPAccountRegistry;
  }
}
