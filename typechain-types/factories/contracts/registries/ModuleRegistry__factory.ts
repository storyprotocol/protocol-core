/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ModuleRegistry,
  ModuleRegistryInterface,
} from "../../../contracts/registries/ModuleRegistry";

const _abi = [
  {
    inputs: [],
    name: "ModuleRegistry__ModuleAddressNotContract",
    type: "error",
  },
  {
    inputs: [],
    name: "ModuleRegistry__ModuleAddressZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ModuleRegistry__ModuleAlreadyRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "ModuleRegistry__ModuleNotRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "ModuleRegistry__NameAlreadyRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "ModuleRegistry__NameDoesNotMatch",
    type: "error",
  },
  {
    inputs: [],
    name: "ModuleRegistry__NameEmptyString",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "module",
        type: "address",
      },
    ],
    name: "ModuleAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "module",
        type: "address",
      },
    ],
    name: "ModuleRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_isModule",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "_modules",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "getModule",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "moduleAddress",
        type: "address",
      },
    ],
    name: "isRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "moduleAddress",
        type: "address",
      },
    ],
    name: "registerModule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "removeModule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ce5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806308f523d81461006757806353e881cc14610097578063639cc67d146100b3578063c3c5a547146100cf578063de272a7f146100ff578063fdc976161461012f575b600080fd5b610081600480360381019061007c91906109de565b61015f565b60405161008e9190610a68565b60405180910390f35b6100b160048036038101906100ac91906109de565b6101a6565b005b6100cd60048036038101906100c89190610aaf565b6103b4565b005b6100e960048036038101906100e49190610b0b565b61079d565b6040516100f69190610b53565b60405180910390f35b61011960048036038101906101149190610b0b565b6107f3565b6040516101269190610b53565b60405180910390f35b610149600480360381019061014491906109de565b610813565b6040516101569190610a68565b60405180910390f35b600080826040516101709190610bdf565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008151036101e1576040517fec78648500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000826040516102099190610bdf565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610285576040517ff4b4395b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080826040516102969190610bdf565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000826040516102d79190610bdf565b908152602001604051809103902060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff02191690558073ffffffffffffffffffffffffffffffffffffffff168260405161037c9190610bdf565b60405180910390207fc7c2b7fdd6075949e44c7daeedba58fd5c0449ad0f224c27fd4a4135d7c919da60405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361041a576040517fc908de7600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff163b0361046b576040517f15e1d0cb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156104ef576040517f62ab4ebb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082510361052a576040517fec78648500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000836040516105529190610bdf565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105ce576040517fb9943cba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610656828273ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b81526004016000604051808303816000875af115801561061f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106489190610c66565b61085c90919063ffffffff16565b61068c576040517fd614bc1300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060008360405161069d9190610bdf565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff16826040516107659190610bdf565b60405180910390207fb857c29f328a6af5a05e6da681a34d36fe28b9d9b5e333c5668d1448b2431ed060405160405180910390a35050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60016020528060005260406000206000915054906101000a900460ff1681565b6000818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008151835114801561087c575081805190602001208380519060200120145b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6108eb826108a2565b810181811067ffffffffffffffff8211171561090a576109096108b3565b5b80604052505050565b600061091d610884565b905061092982826108e2565b919050565b600067ffffffffffffffff821115610949576109486108b3565b5b610952826108a2565b9050602081019050919050565b82818337600083830152505050565b600061098161097c8461092e565b610913565b90508281526020810184848401111561099d5761099c61089d565b5b6109a884828561095f565b509392505050565b600082601f8301126109c5576109c4610898565b5b81356109d584826020860161096e565b91505092915050565b6000602082840312156109f4576109f361088e565b5b600082013567ffffffffffffffff811115610a1257610a11610893565b5b610a1e848285016109b0565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a5282610a27565b9050919050565b610a6281610a47565b82525050565b6000602082019050610a7d6000830184610a59565b92915050565b610a8c81610a47565b8114610a9757600080fd5b50565b600081359050610aa981610a83565b92915050565b60008060408385031215610ac657610ac561088e565b5b600083013567ffffffffffffffff811115610ae457610ae3610893565b5b610af0858286016109b0565b9250506020610b0185828601610a9a565b9150509250929050565b600060208284031215610b2157610b2061088e565b5b6000610b2f84828501610a9a565b91505092915050565b60008115159050919050565b610b4d81610b38565b82525050565b6000602082019050610b686000830184610b44565b92915050565b600081519050919050565b600081905092915050565b60005b83811015610ba2578082015181840152602081019050610b87565b60008484015250505050565b6000610bb982610b6e565b610bc38185610b79565b9350610bd3818560208601610b84565b80840191505092915050565b6000610beb8284610bae565b915081905092915050565b6000610c09610c048461092e565b610913565b905082815260208101848484011115610c2557610c2461089d565b5b610c30848285610b84565b509392505050565b600082601f830112610c4d57610c4c610898565b5b8151610c5d848260208601610bf6565b91505092915050565b600060208284031215610c7c57610c7b61088e565b5b600082015167ffffffffffffffff811115610c9a57610c99610893565b5b610ca684828501610c38565b9150509291505056fea2646970667358221220900f85fe25015cdbf0490c402d4cad236d875a24401a7761b871caa3480bc5f964736f6c63430008170033";

type ModuleRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ModuleRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ModuleRegistry__factory extends ContractFactory {
  constructor(...args: ModuleRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ModuleRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ModuleRegistry__factory {
    return super.connect(runner) as ModuleRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ModuleRegistryInterface {
    return new Interface(_abi) as ModuleRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ModuleRegistry {
    return new Contract(address, _abi, runner) as unknown as ModuleRegistry;
  }
}
