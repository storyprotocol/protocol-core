/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  IPAccountImpl,
  IPAccountImplInterface,
} from "../../contracts/IPAccountImpl";

const _abi = [
  {
    inputs: [],
    name: "accessController",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value_",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data_",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "accessController_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer_",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data_",
        type: "bytes",
      },
    ],
    name: "isValidSigner",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "state",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId_",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611621806100206000396000f3fe6080604052600436106100a05760003560e01c8063bc197c8111610064578063bc197c81146101be578063bc43cbaf146101fb578063c19d93fb14610226578063c4d66de814610251578063f23a6e611461027a578063fc0c546a146102b7576100a7565b806301ffc9a7146100ac578063150b7a02146100e9578063523e3260146101265780638da5cb5b14610163578063b61d27f61461018e576100a7565b366100a757005b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce91906109f4565b6102e4565b6040516100e09190610a3c565b60405180910390f35b3480156100f557600080fd5b50610110600480360381019061010b9190610c31565b6104ee565b60405161011d9190610cc3565b60405180910390f35b34801561013257600080fd5b5061014d60048036038101906101489190610d3e565b610502565b60405161015a9190610cc3565b60405180910390f35b34801561016f57600080fd5b50610178610534565b6040516101859190610dad565b60405180910390f35b6101a860048036038101906101a39190610dc8565b6105de565b6040516101b59190610ebb565b60405180910390f35b3480156101ca57600080fd5b506101e560048036038101906101e09190610fa0565b6106cc565b6040516101f29190610cc3565b60405180910390f35b34801561020757600080fd5b506102106106e1565b60405161021d9190610dad565b60405180910390f35b34801561023257600080fd5b5061023b610705565b604051610248919061107e565b60405180910390f35b34801561025d57600080fd5b5061027860048036038101906102739190611099565b61070b565b005b34801561028657600080fd5b506102a1600480360381019061029c91906110c6565b6107bd565b6040516102ae9190610cc3565b60405180910390f35b3480156102c357600080fd5b506102cc6107d2565b6040516102db9392919061115d565b60405180910390f35b60007f3bb8ecad000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103af57507f6faff5f1000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061041757507f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061047f57507f150b7a02000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104e757507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b600063150b7a0260e01b9050949350505050565b60006105118460008585610852565b156105255763523e326060e01b905061052d565b600060e01b90505b9392505050565b6000806000806105426107d2565b92509250925046831461055b57600093505050506105db565b8173ffffffffffffffffffffffffffffffffffffffff16636352211e826040518263ffffffff1660e01b8152600401610594919061107e565b602060405180830381865afa1580156105b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d591906111a9565b93505050505b90565b60606105ec33868585610852565b61062b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062290611233565b60405180910390fd5b60016000815461063a90611282565b9190508190555060008573ffffffffffffffffffffffffffffffffffffffff1685858560405161066b9291906112fa565b60006040518083038185875af1925050503d80600081146106a8576040519150601f19603f3d011682016040523d82523d6000602084013e6106ad565b606091505b508093508192505050806106c357815160208301fd5b50949350505050565b600063bc197c8160e01b905095945050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361077a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107719061135f565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600063f23a6e6160e01b905095945050505050565b600080600080606067ffffffffffffffff8111156107f3576107f2610b06565b5b6040519080825280601f01601f1916602001820160405280156108255781602001600182028036833780820191505090505b5090506060604d60208301303c8080602001905181019061084691906113d2565b93509350935050909192565b600080838390501480610869575060048383905010155b6108a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089f90611471565b60405180910390fd5b60008060e01b9050600484849050106108dd5783836000906004926108cf9392919061149b565b906108da91906114ee565b90505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637dfd0ddb308888856040518563ffffffff1660e01b815260040161093c949392919061154d565b602060405180830381865afa158015610959573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097d91906115be565b915050949350505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6109d18161099c565b81146109dc57600080fd5b50565b6000813590506109ee816109c8565b92915050565b600060208284031215610a0a57610a09610992565b5b6000610a18848285016109df565b91505092915050565b60008115159050919050565b610a3681610a21565b82525050565b6000602082019050610a516000830184610a2d565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a8282610a57565b9050919050565b610a9281610a77565b8114610a9d57600080fd5b50565b600081359050610aaf81610a89565b92915050565b6000819050919050565b610ac881610ab5565b8114610ad357600080fd5b50565b600081359050610ae581610abf565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610b3e82610af5565b810181811067ffffffffffffffff82111715610b5d57610b5c610b06565b5b80604052505050565b6000610b70610988565b9050610b7c8282610b35565b919050565b600067ffffffffffffffff821115610b9c57610b9b610b06565b5b610ba582610af5565b9050602081019050919050565b82818337600083830152505050565b6000610bd4610bcf84610b81565b610b66565b905082815260208101848484011115610bf057610bef610af0565b5b610bfb848285610bb2565b509392505050565b600082601f830112610c1857610c17610aeb565b5b8135610c28848260208601610bc1565b91505092915050565b60008060008060808587031215610c4b57610c4a610992565b5b6000610c5987828801610aa0565b9450506020610c6a87828801610aa0565b9350506040610c7b87828801610ad6565b925050606085013567ffffffffffffffff811115610c9c57610c9b610997565b5b610ca887828801610c03565b91505092959194509250565b610cbd8161099c565b82525050565b6000602082019050610cd86000830184610cb4565b92915050565b600080fd5b600080fd5b60008083601f840112610cfe57610cfd610aeb565b5b8235905067ffffffffffffffff811115610d1b57610d1a610cde565b5b602083019150836001820283011115610d3757610d36610ce3565b5b9250929050565b600080600060408486031215610d5757610d56610992565b5b6000610d6586828701610aa0565b935050602084013567ffffffffffffffff811115610d8657610d85610997565b5b610d9286828701610ce8565b92509250509250925092565b610da781610a77565b82525050565b6000602082019050610dc26000830184610d9e565b92915050565b60008060008060608587031215610de257610de1610992565b5b6000610df087828801610aa0565b9450506020610e0187828801610ad6565b935050604085013567ffffffffffffffff811115610e2257610e21610997565b5b610e2e87828801610ce8565b925092505092959194509250565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e76578082015181840152602081019050610e5b565b60008484015250505050565b6000610e8d82610e3c565b610e978185610e47565b9350610ea7818560208601610e58565b610eb081610af5565b840191505092915050565b60006020820190508181036000830152610ed58184610e82565b905092915050565b600067ffffffffffffffff821115610ef857610ef7610b06565b5b602082029050602081019050919050565b6000610f1c610f1784610edd565b610b66565b90508083825260208201905060208402830185811115610f3f57610f3e610ce3565b5b835b81811015610f685780610f548882610ad6565b845260208401935050602081019050610f41565b5050509392505050565b600082601f830112610f8757610f86610aeb565b5b8135610f97848260208601610f09565b91505092915050565b600080600080600060a08688031215610fbc57610fbb610992565b5b6000610fca88828901610aa0565b9550506020610fdb88828901610aa0565b945050604086013567ffffffffffffffff811115610ffc57610ffb610997565b5b61100888828901610f72565b935050606086013567ffffffffffffffff81111561102957611028610997565b5b61103588828901610f72565b925050608086013567ffffffffffffffff81111561105657611055610997565b5b61106288828901610c03565b9150509295509295909350565b61107881610ab5565b82525050565b6000602082019050611093600083018461106f565b92915050565b6000602082840312156110af576110ae610992565b5b60006110bd84828501610aa0565b91505092915050565b600080600080600060a086880312156110e2576110e1610992565b5b60006110f088828901610aa0565b955050602061110188828901610aa0565b945050604061111288828901610ad6565b935050606061112388828901610ad6565b925050608086013567ffffffffffffffff81111561114457611143610997565b5b61115088828901610c03565b9150509295509295909350565b6000606082019050611172600083018661106f565b61117f6020830185610d9e565b61118c604083018461106f565b949350505050565b6000815190506111a381610a89565b92915050565b6000602082840312156111bf576111be610992565b5b60006111cd84828501611194565b91505092915050565b600082825260208201905092915050565b7f496e76616c6964207369676e6572000000000000000000000000000000000000600082015250565b600061121d600e836111d6565b9150611228826111e7565b602082019050919050565b6000602082019050818103600083015261124c81611210565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061128d82610ab5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036112bf576112be611253565b5b600182019050919050565b600081905092915050565b60006112e183856112ca565b93506112ee838584610bb2565b82840190509392505050565b60006113078284866112d5565b91508190509392505050565b7f496e76616c69642061636365737320636f6e74726f6c6c657200000000000000600082015250565b60006113496019836111d6565b915061135482611313565b602082019050919050565b600060208201905081810360008301526113788161133c565b9050919050565b60008151905061138e81610abf565b92915050565b600061139f82610a57565b9050919050565b6113af81611394565b81146113ba57600080fd5b50565b6000815190506113cc816113a6565b92915050565b6000806000606084860312156113eb576113ea610992565b5b60006113f98682870161137f565b935050602061140a868287016113bd565b925050604061141b8682870161137f565b9150509250925092565b7f496e76616c69642063616c6c6461746100000000000000000000000000000000600082015250565b600061145b6010836111d6565b915061146682611425565b602082019050919050565b6000602082019050818103600083015261148a8161144e565b9050919050565b600080fd5b600080fd5b600080858511156114af576114ae611491565b5b838611156114c0576114bf611496565b5b6001850283019150848603905094509492505050565b600082905092915050565b600082821b905092915050565b60006114fa83836114d6565b82611505813561099c565b92506004821015611545576115407fffffffff00000000000000000000000000000000000000000000000000000000836004036008026114e1565b831692505b505092915050565b60006080820190506115626000830187610d9e565b61156f6020830186610d9e565b61157c6040830185610d9e565b6115896060830184610cb4565b95945050505050565b61159b81610a21565b81146115a657600080fd5b50565b6000815190506115b881611592565b92915050565b6000602082840312156115d4576115d3610992565b5b60006115e2848285016115a9565b9150509291505056fea2646970667358221220ac2bdd3d78316b1c1009d735f36450b634034c55934c28034cbdf79d2e868a2d64736f6c63430008170033";

type IPAccountImplConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IPAccountImplConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IPAccountImpl__factory extends ContractFactory {
  constructor(...args: IPAccountImplConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      IPAccountImpl & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): IPAccountImpl__factory {
    return super.connect(runner) as IPAccountImpl__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IPAccountImplInterface {
    return new Interface(_abi) as IPAccountImplInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IPAccountImpl {
    return new Contract(address, _abi, runner) as unknown as IPAccountImpl;
  }
}
