/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IAccessController,
  IAccessControllerInterface,
} from "../../../contracts/interfaces/IAccessController";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "ipAccount_",
        type: "address",
      },
      {
        internalType: "address",
        name: "signer_",
        type: "address",
      },
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "func_",
        type: "bytes4",
      },
    ],
    name: "checkPermission",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ipAccount_",
        type: "address",
      },
      {
        internalType: "address",
        name: "signer_",
        type: "address",
      },
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "func_",
        type: "bytes4",
      },
    ],
    name: "getPermission",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer_",
        type: "address",
      },
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "func_",
        type: "bytes4",
      },
      {
        internalType: "uint8",
        name: "permission_",
        type: "uint8",
      },
    ],
    name: "setGlobalPermission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ipAccount_",
        type: "address",
      },
      {
        internalType: "address",
        name: "signer_",
        type: "address",
      },
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "func_",
        type: "bytes4",
      },
      {
        internalType: "uint8",
        name: "permission_",
        type: "uint8",
      },
    ],
    name: "setPermission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IAccessController__factory {
  static readonly abi = _abi;
  static createInterface(): IAccessControllerInterface {
    return new Interface(_abi) as IAccessControllerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IAccessController {
    return new Contract(address, _abi, runner) as unknown as IAccessController;
  }
}
